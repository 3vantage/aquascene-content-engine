# AquaScene Content Engine - Nginx Configuration (Staging)
# Version: 1.0

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load dynamic modules
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 4096;
    server_tokens off;
    server_names_hash_bucket_size 128;

    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Format
    log_format staging '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'rt=$request_time uct="$upstream_connect_time" '
                      'uht="$upstream_header_time" urt="$upstream_response_time" '
                      'staging=yes';

    access_log /var/log/nginx/access.log staging;

    # Include SSL configuration
    include /etc/nginx/conf.d/ssl.conf;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/x-font-ttf
        font/opentype;

    # Rate Limiting (more restrictive for staging)
    limit_req_zone $binary_remote_addr zone=staging_api:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=staging_general:10m rate=2r/s;
    limit_conn_zone $binary_remote_addr zone=staging_conn:10m;

    # Upstream servers
    upstream content_manager_staging {
        least_conn;
        server content-manager:8000 max_fails=2 fail_timeout=30s;
        keepalive 32;
    }

    upstream ai_processor_staging {
        least_conn;
        server ai-processor:8001 max_fails=2 fail_timeout=30s;
        keepalive 16;
    }

    upstream web_scraper_staging {
        least_conn;
        server web-scraper:8002 max_fails=2 fail_timeout=30s;
        keepalive 8;
    }

    upstream distributor_staging {
        least_conn;
        server distributor:8003 max_fails=2 fail_timeout=30s;
        keepalive 16;
    }

    upstream subscriber_manager_staging {
        least_conn;
        server subscriber-manager:8004 max_fails=2 fail_timeout=30s;
        keepalive 16;
    }

    upstream admin_dashboard_staging {
        least_conn;
        server admin-dashboard:3000 max_fails=2 fail_timeout=30s;
        keepalive 8;
    }

    # Default server (catch-all)
    server {
        listen 80 default_server;
        listen 443 ssl http2 default_server;
        server_name _;
        
        ssl_certificate /etc/nginx/certs/default.pem;
        ssl_certificate_key /etc/nginx/certs/default.key;
        
        return 444;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name staging.aquascene.com staging-api.aquascene.com staging-admin.aquascene.com;
        
        # Let's Encrypt challenges
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Main API Server (HTTPS)
    server {
        listen 443 ssl http2;
        server_name staging-api.aquascene.com;

        # SSL Configuration
        ssl_certificate /etc/nginx/certs/staging-api.aquascene.com.pem;
        ssl_certificate_key /etc/nginx/certs/staging-api.aquascene.com.key;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'self';" always;
        
        # Rate limiting
        limit_req zone=staging_api burst=10 nodelay;
        limit_conn staging_conn 20;

        # API Routes
        location /api/ {
            proxy_pass http://content_manager_staging;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Staging environment header
            proxy_set_header X-Environment "staging";
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # AI Processor Service
        location /ai/ {
            proxy_pass http://ai_processor_staging;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Environment "staging";
            
            # Longer timeouts for AI processing
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # Web Scraper Service
        location /scraper/ {
            proxy_pass http://web_scraper_staging;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Environment "staging";
        }

        # Distributor Service
        location /distributor/ {
            proxy_pass http://distributor_staging;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Environment "staging";
        }

        # Subscriber Manager Service
        location /subscribers/ {
            proxy_pass http://subscriber_manager_staging;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Environment "staging";
        }

        # Health check
        location /health {
            access_log off;
            return 200 "staging-healthy\n";
            add_header Content-Type text/plain;
            add_header X-Environment "staging";
        }

        # Block sensitive endpoints in staging
        location ~ /(admin|monitoring)/ {
            deny all;
            return 404;
        }
    }

    # Admin Dashboard Server (HTTPS)
    server {
        listen 443 ssl http2;
        server_name staging-admin.aquascene.com;

        # SSL Configuration
        ssl_certificate /etc/nginx/certs/staging-admin.aquascene.com.pem;
        ssl_certificate_key /etc/nginx/certs/staging-admin.aquascene.com.key;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data: https:; connect-src 'self' https: wss:; frame-ancestors 'none';" always;
        
        # Rate limiting
        limit_req zone=staging_general burst=20 nodelay;
        limit_conn staging_conn 10;

        # Basic authentication for staging admin
        auth_basic "Staging Admin Access";
        auth_basic_user_file /etc/nginx/.htpasswd.staging;

        # Admin Dashboard
        location / {
            proxy_pass http://admin_dashboard_staging;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Environment "staging";
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }
    }

    # Monitoring Server (HTTPS)
    server {
        listen 443 ssl http2;
        server_name staging-monitoring.aquascene.com;

        # SSL Configuration
        ssl_certificate /etc/nginx/certs/staging-monitoring.aquascene.com.pem;
        ssl_certificate_key /etc/nginx/certs/staging-monitoring.aquascene.com.key;

        # Strong authentication for monitoring
        auth_basic "Staging Monitoring";
        auth_basic_user_file /etc/nginx/.htpasswd.monitoring;

        # Grafana
        location / {
            proxy_pass http://grafana:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Prometheus
        location /prometheus/ {
            proxy_pass http://prometheus:9090/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}