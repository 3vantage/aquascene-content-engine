# AquaScene Content Engine - Nginx Configuration (Development)
# Version: 1.0

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

# Load dynamic modules
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';

    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log detailed;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=1r/s;

    # Upstream servers
    upstream content_manager {
        least_conn;
        server content-manager:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream ai_processor {
        least_conn;
        server ai-processor:8001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream web_scraper {
        least_conn;
        server web-scraper:8002 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    upstream distributor {
        least_conn;
        server distributor:8003 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream subscriber_manager {
        least_conn;
        server subscriber-manager:8004 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream admin_dashboard {
        least_conn;
        server admin-dashboard:3000 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    upstream prometheus {
        server prometheus:9090;
    }

    upstream grafana {
        server grafana:3000;
    }

    # Default server (catch-all)
    server {
        listen 80 default_server;
        server_name _;
        return 444;
    }

    # Main application server
    server {
        listen 80;
        server_name localhost aquascene.local content-engine.local;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Root location - redirect to admin dashboard
        location / {
            return 301 /admin;
        }

        # Admin Dashboard
        location /admin {
            proxy_pass http://admin_dashboard;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }

        # API Routes
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://content_manager;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # CORS headers for development
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # AI Processor Service
        location /ai/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://ai_processor;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Longer timeouts for AI processing
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # Web Scraper Service
        location /scraper/ {
            limit_req zone=api burst=5 nodelay;
            
            proxy_pass http://web_scraper;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Distributor Service
        location /distributor/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://distributor;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }

        # Subscriber Manager Service
        location /subscribers/ {
            limit_req zone=api burst=15 nodelay;
            
            proxy_pass http://subscriber_manager;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Monitoring endpoints
        location /monitoring/prometheus/ {
            proxy_pass http://prometheus/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Basic auth for security (development)
            auth_basic "Monitoring Access";
            auth_basic_user_file /etc/nginx/.htpasswd;
        }

        location /monitoring/grafana/ {
            proxy_pass http://grafana/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Static assets and media
        location /assets/ {
            alias /var/www/assets/;
            expires 1M;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Security
            location ~* \.(php|jsp|cgi|asp|aspx)$ {
                deny all;
            }
        }

        # Health check endpoints
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        location /nginx-health {
            access_log off;
            stub_status on;
            allow 127.0.0.1;
            allow 172.0.0.0/8;
            deny all;
        }

        # Block common attack vectors
        location ~* \.(git|svn|env|log|bak|backup|old|tmp)$ {
            deny all;
            return 404;
        }

        location ~ /\. {
            deny all;
            return 404;
        }

        # Prevent access to sensitive files
        location ~* \.(conf|ini|sql|dump|tar|gz|bz2)$ {
            deny all;
            return 404;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Include additional server configs
    include /etc/nginx/conf.d/*.conf;
}

# Stream module for TCP/UDP proxying
stream {
    # Postgres read/write splitting (optional)
    upstream postgres_write {
        server postgres:5432;
    }
    
    upstream postgres_read {
        server postgres:5432;  # In development, use same server
    }
    
    # Redis proxy
    upstream redis_cluster {
        server redis:6379;
    }
}