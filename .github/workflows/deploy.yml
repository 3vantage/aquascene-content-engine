name: Deploy Content Engine

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r services/ai-processor/requirements.txt
          pip install pytest flake8 black

      - name: Run linting
        run: |
          flake8 services/ai-processor/src --max-line-length=88 --ignore=E203,W503
          black --check services/ai-processor/src

      - name: Run tests
        run: |
          cd services/ai-processor
          python -m pytest tests/ -v

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Run safety check on Python dependencies
        run: |
          pip install safety
          safety check -r services/ai-processor/requirements.txt

  build-ai-processor:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push AI Processor
        uses: docker/build-push-action@v5
        with:
          context: ./services/ai-processor
          file: ./services/ai-processor/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}/ai-processor:latest
            ${{ env.REGISTRY }}/${{ github.repository }}/ai-processor:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-content-engine:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build-ai-processor
    environment: production
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT || 22 }}
          script: |
            cd /opt/aquascene
            
            # Login to registry
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
            
            # Pull latest images
            docker pull ${{ env.REGISTRY }}/${{ github.repository }}/ai-processor:latest
            
            # Deploy content engine services
            docker-compose -f docker-compose.prod.yml up -d --no-deps ai-processor
            
            # Health check
            sleep 30
            if docker ps | grep -q ai-processor && docker logs ai-processor | grep -q "started"; then
              echo "✅ Content Engine deployment successful"
            else
              echo "❌ Content Engine deployment failed"
              exit 1
            fi